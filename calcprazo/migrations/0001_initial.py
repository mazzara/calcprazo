# Generated by Django 4.1 on 2022-08-04 15:32

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CalculaPrazo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_stamp", models.DateTimeField(auto_now_add=True)),
                ("data_evento", models.DateField()),
                ("evento", models.CharField(max_length=254)),
                (
                    "prazo",
                    models.IntegerField(
                        default=15,
                        validators=[
                            django.core.validators.MaxValueValidator(600),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                ("dias_corridos", models.DateField()),
                ("dias_uteis_banco", models.DateField()),
                ("dias_uteis_tribunal", models.DateField()),
                ("dia_da_semana", models.CharField(max_length=255)),
                ("feriado", models.IntegerField(default=0)),
                ("aia_da_semana_num", models.IntegerField(default=0)),
                ("tribunal", models.CharField(blank=True, max_length=254, null=True)),
                ("adv_email", models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name="Feriado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_feriado", models.DateField()),
                ("feriado", models.CharField(max_length=255)),
                (
                    "provimento",
                    models.CharField(
                        choices=[
                            ("F", "Feriado"),
                            ("P", "Provimento"),
                            ("I", "Indisponibilidade"),
                        ],
                        default="F",
                        max_length=1,
                    ),
                ),
            ],
            options={"ordering": ["-data_feriado"],},
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
    ]
